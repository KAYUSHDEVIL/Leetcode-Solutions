class Solution {
public:
    vector<bool> checkArithmeticSubarrays(vector<int>& nums, vector<int>& l, vector<int>& r) {
        vector<bool>sol;
        int n=l.size();
        for(int index=0;index<n;index++){
           int i=l[index],j=r[index],length=j-i;
           map<int,int>mp;
            for(int k=i;k<=j;k++){
                mp[nums[k]]++;
          }
            vector<int>check;
                for(auto itr:mp){
                     if(itr.second>1){
                        while(itr.second!=0){
                           check.push_back(itr.first);
                            itr.second--;
                        }
                     }
                    else
                    check.push_back(itr.first);
            }
            int diff = check[1] - check[0];
            bool isArithmetic = true;
            for (int i = 0; i < check.size()-1; i++) {
                if (check[i + 1] - check[i] != diff) {
                    isArithmetic = false;
                    break;
                }
            }
            sol.push_back(isArithmetic);
            mp.clear();
        }
        return sol;
    }
};
